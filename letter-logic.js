// Letter Generator Templates & Logic
const TEMPLATES = {
  collection: `I am disputing the validity of the collection account reported under [Account Info]. Under the FDCPA, I request validation of this debt.`,
  chargeoff: `I am disputing the charge-off reported under [Account Info]. Please provide documentation establishing accuracy, including signed agreements, payment history, and charge-off accounting.`,
  cra: `This is a dispute under the FCRA. I dispute the accuracy of the information reported under [Account Info]. Please reinvestigate and delete unverifiable information.`,
  cra2: `I previously disputed the account [Account Info], and you verified it without providing evidence. Under the FCRA, provide the method of verification and the furnisher.`
};
async function extractTextFromFile(file){ if(!file) return ""; if(file.type==="application/pdf"){ const ab=await file.arrayBuffer(); const pdf=await pdfjsLib.getDocument({data:ab}).promise; let text=""; for(let i=1;i<=pdf.numPages;i++){ const page=await pdf.getPage(i); const c=await page.getTextContent(); text+=c.items.map(it=>it.str).join(" ")+"\n"; } return text; } return await file.text(); }
function autoDetectTypeFromText(text){ const scores={collection:0,chargeoff:0,cra:0,cra2:0}; if(/charge[- ]?off/i.test(text)) scores.chargeoff+=2; if(/collection/i.test(text)) scores.collection+=2; if(/experian|equifax|transunion/i.test(text)) scores.cra+=1; if(/verified|frivolous/i.test(text)) scores.cra2+=2; const choice=Object.entries(scores).sort((a,b)=>b[1]-a[1])[0]; return choice[1]>0?choice[0]:""; }
document.getElementById("creditReport").addEventListener("change", async e=>{ const file=e.target.files[0]; if(!file) return; const text=await extractTextFromFile(file); const type=autoDetectTypeFromText(text); const sel=document.getElementById("letterType"); if(type){ sel.value=type; alert("System detected: "+type.toUpperCase()); } });
function generateLetter(){ const type=document.getElementById("letterType").value; if(!type){ alert("Select a letter type."); return;} const name=document.getElementById("yourName").value||"[Your Name]"; const addr=document.getElementById("yourAddr").value||"[Your Address]\nCity, ST ZIP"; const date=document.getElementById("letterDate").value||new Date().toISOString().slice(0,10); const recipName=document.getElementById("recipName").value||"[Recipient Name]"; const recipAddr=document.getElementById("rec...
function copyLetter(){ const ta=document.getElementById("output"); ta.select(); document.execCommand("copy"); alert("Letter copied."); }
function downloadDoc(){ const c=document.getElementById("output").value||""; const html=`<!DOCTYPE html><html><head><meta charset='utf-8'></head><body><pre>${c.replace(/</g,"&lt;")}</pre></body></html>`; const blob=new Blob([html],{type:"application/msword"}); const url=URL.createObjectURL(blob); const a=document.createElement("a"); a.href=url;a.download="dispute_letter.doc";a.click();URL.revokeObjectURL(url); }
function downloadPDF(){ const c=document.getElementById("output").value||""; const docDef={content:[{text:"Dispute Letter",style:"header"},{text:c,margin:[0,10,0,0]}],styles:{header:{fontSize:16,bold:true}},defaultStyle:{fontSize:11}}; pdfMake.createPdf(docDef).download("dispute_letter.pdf"); }
function autoDetectRound2(){ alert("Upload CRA response first (placeholder)."); }
